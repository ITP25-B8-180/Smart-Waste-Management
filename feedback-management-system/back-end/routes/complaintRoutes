const express = require('express');
const router = express.Router();
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const {
  getAllComplaints,
  createComplaint,
  updateComplaintStatus,
  updateComplaintNotes,
  deleteComplaint,
  getComplaintById
} = require('../controllers/complaintController');

// Configure multer for file uploads
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    // Create uploads directory if it doesn't exist
    const uploadPath = 'uploads/';
    if (!fs.existsSync(uploadPath)) {
      fs.mkdirSync(uploadPath, { recursive: true });
    }
    cb(null, uploadPath);
  },
  filename: function (req, file, cb) {
    // Generate unique filename
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    cb(null, uniqueSuffix + path.extname(file.originalname));
  }
});

const fileFilter = (req, file, cb) => {
  // Allow images and documents only
  if (file.mimetype.startsWith('image/') || 
      file.mimetype === 'application/pdf' ||
      file.mimetype === 'application/msword' ||
      file.mimetype === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||
      file.mimetype === 'text/plain') {
    cb(null, true);
  } else {
    cb(new Error('Invalid file type. Only images, PDFs, Word documents, and text files are allowed.'), false);
  }
};

const upload = multer({ 
  storage: storage,
  limits: {
    fileSize: 5 * 1024 * 1024 // 5MB limit
  },
  fileFilter: fileFilter
});

// GET /api/complaints - Get all complaints
router.get('/', getAllComplaints);

// POST /api/complaints - Create new complaint with file upload
router.post('/', upload.array('files', 5), createComplaint);

// GET /api/complaints/:id - Get complaint by ID
router.get('/:id', getComplaintById);

// PUT /api/complaints/:id/status - Update complaint status
router.put('/:id/status', updateComplaintStatus);

// PUT /api/complaints/:id/notes - Update complaint notes
router.put('/:id/notes', updateComplaintNotes);

// DELETE /api/complaints/:id - Delete complaint
router.delete('/:id', deleteComplaint);

module.exports = router;